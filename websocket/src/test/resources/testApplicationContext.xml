<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

	<context:component-scan base-package="org.usergrid.persistence" />
	<context:annotation-config />

	<bean id="properties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="singleton" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/usergrid-test.properties</value>
				<value>${usergrid-custom-spring-test-properties}</value>
			</list>
		</property>
	</bean>

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="properties" />
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
	</bean>

	<bean id="cassandraUseRemote" class="java.lang.Boolean">
		<constructor-arg value="${cassandra.use_remote}" />
	</bean>
	<bean id="cassandraLocalUrl" class="java.lang.String">
		<constructor-arg value="${cassandra.local.url}" />
	</bean>
	<bean id="cassandraRemoteUrl" class="java.lang.String">
		<constructor-arg value="${cassandra.remote.url}" />
	</bean>
	<bean id="cassandraUrl" class="java.lang.String">
		<constructor-arg
			value="#{cassandraUseRemote ? cassandraRemoteUrl : cassandraLocalUrl}" />
	</bean>
	<util:map id="cassandraCredentials" map-class="java.util.HashMap">
		<entry key="username" value="${cassandra.username}" />
		<entry key="password" value="${cassandra.password}" />
	</util:map>

	<bean id="realm" class="org.usergrid.security.shiro.Realm">
		<property name="name" value="realm" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
		<property name="realm" ref="realm" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- The Time Resolution used for the cluster -->
	<bean id="microsecondsTimeResolution"
		class="me.prettyprint.cassandra.service.clock.MicrosecondsClockResolution" />

	<bean id="cassandraHostConfigurator"
		class="me.prettyprint.cassandra.service.CassandraHostConfigurator">
		<constructor-arg ref="cassandraUrl" />
		<property name="clockResolution" ref="microsecondsTimeResolution" />
	</bean>

	<bean id="cassandraCluster" class="me.prettyprint.cassandra.service.ThriftCluster">
		<constructor-arg value="${cassandra.cluster}" />
		<constructor-arg ref="cassandraHostConfigurator" />
		<constructor-arg ref="cassandraCredentials" />
	</bean>

	<!-- bean name="lockManager" class="org.usergrid.locking.zookeeper.ZooKeeperLockManagerImpl" /> -->
	<bean name="lockManager" class="org.usergrid.locking.zookeeper.NoOpLockManagerImpl" />

	<bean id="cassandraService"
		class="org.usergrid.persistence.cassandra.CassandraService" init-method="init">
		<constructor-arg ref="properties" />
		<constructor-arg ref="cassandraCluster" />
		<constructor-arg ref="cassandraHostConfigurator" />
		<constructor-arg ref="lockManager" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.usergrid.persistence.cassandra.EntityManagerFactoryImpl">
		<constructor-arg ref="cassandraService" />
	</bean>

	<bean id="queueManagerFactory"
		class="org.usergrid.mq.cassandra.QueueManagerFactoryImpl">
		<constructor-arg ref="cassandraService" />
	</bean>

	<bean id="serviceManagerFactory" class="org.usergrid.services.ServiceManagerFactory">
		<constructor-arg>
			<ref bean="entityManagerFactory" />
		</constructor-arg>
	</bean>

	<bean id="managementService" class="org.usergrid.management.cassandra.ManagementServiceImpl" />

	<!-- <bean id="broker" class="org.apache.activemq.xbean.BrokerFactoryBean"> 
		<property name="config" value="classpath:test-activemq.xml" /> <property 
		name="start" value="true" /> </bean> <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" 
		destroy-method="stop"> <property name="connectionFactory"> <bean class="org.apache.activemq.ActiveMQConnectionFactory"> 
		<property name="brokerURL"> <value>tcp://localhost:61616</value> </property> 
		</bean> </property> </bean> <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue"> 
		<constructor-arg value="FOO.TEST" /> </bean> <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate" 
		p:connectionFactory-ref="jmsFactory" p:defaultDestination-ref="destination" 
		/> <bean id="messageListener" class="org.usergrid.websocket.ExampleListener" 
		/> <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer"> 
		<property name="connectionFactory" ref="jmsFactory" /> <property name="destination" 
		ref="destination" /> <property name="messageListener" ref="messageListener" 
		/> </bean> <bean id="producer" class="org.usergrid.websocket.SimpleMessageProducer" 
		init-method="sendMessages" /> -->

</beans>
